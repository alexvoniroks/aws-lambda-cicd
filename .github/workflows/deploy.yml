name: Deploy Lambda Function

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'terraform/**'
      - 'requirements.txt'

# Prevent concurrent deployments - only one at a time
concurrency:
  group: lambda-deployment
  cancel-in-progress: false  # Let current deployment finish

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION || 'us-east-1' }}
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0
    
    - name: Terraform Init
      working-directory: ./terraform
      run: |
        terraform init \
          -backend-config="bucket=${{ vars.TERRAFORM_STATE_BUCKET }}" \
          -backend-config="key=${{ vars.TERRAFORM_STATE_KEY }}" \
          -backend-config="region=${{ vars.AWS_REGION || 'us-east-1' }}"
    
    - name: Terraform Apply
      working-directory: ./terraform
      run: |
        # Apply changes automatically (one-time deploy)
        terraform apply -auto-approve
        
        # Show what was deployed
        echo "âœ… Deployment completed!"
        terraform output
    
    - name: Test Lambda Function
      run: |
        # Get function name from terraform output
        cd terraform
        FUNCTION_NAME=$(terraform output -raw lambda_function_name 2>/dev/null || echo "")
        
        if [ ! -z "$FUNCTION_NAME" ]; then
          echo "ðŸ§ª Testing function: $FUNCTION_NAME"
          aws lambda invoke \
            --function-name "$FUNCTION_NAME" \
            --payload '{"test": "deployment"}' \
            response.json > /dev/null
          
          echo "Function response:"
          cat response.json
          echo "âœ… Function test passed!"
        fi
